# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="=4q]o1C^>2e?bZJx:XMfb9@D>04Cyk9uaKdIKi?ZCjV/NwW:wyB0eImm5Zc5jdr3"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

#rabbit-mq configuration
rabbitmq.host="amqp://kxxpfkfn:KtYqkmYZT6Y9Fl2GYl7qBUMo4y5z-ZbT@bunny.cloudamqp.com/kxxpfkfn"
#rabbitmq.host=localhost
rabbitmq.queue="randl"
rabbitmq.exchange=exchange1

#elasticsearch
elasticsearch.host = "http://24ehmqpf:aiegxx8odfk5lvps@oak-165896.eu-west-1.bonsai.io"